#!/usr/bin/env python
# -*- coding: utf-8 -*-

# This is a simple script to print select attribs of a json blob

import json
import optparse
import sys

def process(line, attributes):

    data = json.loads(line)
    results = {}

    if attributes:
        for attrib in attributes:
            ref = data
            for part in attrib.split('.'):
                if part in ref:
                    ref = ref[part]
            if ref:
                results[attrib] = ref
    # dump everything
    else:
        results = data

    return results
          


def main():
    usage = "usage: %prog [options]"
    parser = optparse.OptionParser(usage=usage)

    parser.add_option("-d", "--default", metavar="NUMBER", type="float", 
        help="if specified it will be used for null/undef values")

    parser.add_option("-t", "--tabs", action="store_true", default=False,
        help="output will be values tab seperated")

    parser.add_option("-p", "--pretty", action="store_true", default=False,
        help="output will be pretty json")

    parser.add_option("-s", "--schema", action="store_true", default=False,
        help="output json keys")

    (options, args) = parser.parse_args()
    
    for line in sys.stdin.readlines():
        results = process(line.strip(), args)

        if options.schema:
            # might want to make this print out schem of complex data
            print('\t'.join(map(str,[x for x in results.keys()])))
            continue

        if options.tabs:
            print('\t'.join(map(str,[x for x in results.values()])))
        elif options.pretty:
            print json.dumps(results, indent=4)
        else:
            print json.dumps(results)

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        sys.exit(0)


